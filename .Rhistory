dfbeta(fit)
dfbeta(fit)
dfbetas(fit)
hatvalues(fit)[5]
data(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
summary(fit)$coef[3]
data(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
summary(fit)$coef[3]
fit <- lm(mpg ~ as.factor(cyl) + wt, mtcars)
summary(fit)$coef
fit <- lm(mpg ~ as.factor(cyl), mtcars)
summary(fit)$coef
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)[5]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)[5]
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)[5]
dfbetas(fit)
dfbetas(fit)[2,5]
dfbetas(fit)[5,"x"]
swirl()
fit <- lm(child ~ parent, galton)
sqrt(sum(sq(fit$residuals)) / (n-2))
sqrt(sum(fit$residuals^2) / (n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- galton$child
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit$residuals)
sRes <- deviance(fit$residuals)
fit$residuals
sRes <- deviance(fit)
sRes/sTot
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Education, swiss$Examination)
cor(swiss$Education, swiss$Agriculture)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all$coef - efit$coef
all$coefficients - efit$coefficients
6
dim(sprays)
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
sF
summary(InsectSprays[,2])
sapply(class(InsectSprays))
sapply(colclass(InsectSprays))
6
sapply(InsectSprays, class)
lm(count ~ spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, spray2)
fit2 <- lm(InsectSprays$count ~ spray2)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3]) / 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hungry)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmM <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Year*Sex, hunger)
summary(lmInter)
library(mtcars)
data(mtcars)
dataset(mtcars)
mtcars
head(mtcars)
sapply(mtcars, class)
summary(mtcars)
mtcars[1]
mtcars[0]
mtcars[0]
summary(mtcars)
?mtcars
plot(mpg,am)
plot(mtcars$mpg,mtcars$am)
plot(mtcars$am, mtcars$mpg)
?mtcars
mtcars$trn[am==1] <- "manual"
mtcars$trn[mtcars$am==1] <- "manual"
mtcars$trn[mtcars$am==0] <- "automatic"
plot(mtcars$trn, mtcars$mpg)
mtcars$trn <- as.factor(mtcars$trn)
plot(mtcars$trn, mtcars$mpg)
plot(mtcars$am, mtcars$mpg)
?mtcars
plot(mtcars$am, mtcars$mpg)
plot(mtcars$trn, mtcars$mpg)
?mtcars
head(mtcars)
plot(mtcars$am, mtcars$mpg)
plot(mtcars$trn, mtcars$mpg)
data(mtcars)
head(mtcars)
sapply(mtcars, class)
summary(mtcars)
?mtcars
mtcars$trn[mtcars$am==1] <- "manual"
mtcars$trn[mtcars$am==0] <- "automatic"
mtcars$trn <- as.factor(mtcars$trn)
plot(mtcars$trn, mtcars$mpg)
```plot(mtcars$trn, mtcars$mpg)
``plot(mtcars$trn, mtcars$mpg)
dim(mtcars)
?mtcars
summary(mtcars$mpg)
sapply(c(mtcars$mpg, mtcars$am), class)
sapply(c(mtcars$mpg, mtcars$am), class)
summary(mtcars$mpg)
plot(mtcars$am, mtcars$mpg)
plot(mtcars$am, mtcars$mpg, ylabel = "miles per gallon", xlabel="transmission (0 = auto, 1 = manual)")
plot(mtcars$am, mtcars$mpg, ylabel = "miles per gallon", xlabel="transmission (0 = auto, 1 = manual)")
?plot
plot(mtcars$am, mtcars$mpg, ylab = "miles per gallon", xlab = "transmission (0 = auto, 1 = manual)")
plot(mtcars$am, mtcars$mpg, ylab="miles per gallon", xlab="transmission (0 = auto, 1 = manual)", main="MPG per transmission type")
plot(as.factor(mtcars$am), mtcars$mpg, ylab="miles per gallon", xlab="transmission (0 = auto, 1 = manual)", main="Figure 1: MPG per transmission type")
head(mtcars)
data(mtcars)
head(mtcars)
mtcars$trn[mtcars$am==1] <- "manual"
mtcars$trn[mtcars$am==0] <- "automatic"
mtcars
class(mtcars$trn)
class(as.factor(mtcars$trn))
mtcars$trn <- as.factor(mtcars$trn)
mtcars$trn
fit <- lm(mpg ~ trn, mtcars)
summary(fit)
fit <- lm(mpg ~ trn - 1, mtcars)
summary(fit)
plot(fit)
fit <- lm(mpg ~ trn, mtcars)
summary(fit)
plot(fit)
plot(predict(fit))
fit <- lm(mpg ~ trn, mtcars)
summary(fit)
fit <- lm(mpg ~ trn - 1, mtcars)
summary(fit)
fit <- lm(mpg ~ trn + trn*mpg, mtcars)
fit <- lm(mpg ~ trn + am*mpg, mtcars)
fit <- lm(mpg ~ trn + am, mtcars)
summary(fit)
fit <- lm(mpg ~ trn - 1, mtcars)
summary(fit)
fit1 <- lm(mpg ~ trn, mtcars)
summary(fit1)
fit2 <- lm(mpg ~ trn - 1, mtcars)
summary(fit2)
col = "black", cex = 1.1, pch = 21,frame = FALSE)
col = "black", cex = 1.1, pch = 21,frame = FALSE)
col = "black")
bg = "lightblue")
plot(mtcars$trn, mtcars$mpg)
abline(fit1, lwd = 2)
abline(fit2, lwd = 2)
summary(fit1)$coef
summary(fit2)$coef
plot(mtcars$trn, resid(fit1))
plot(as.numeric(mtcars$trn), resid(fit1))
plot(mtcars$trn, resid(fit1))
)
plot(as.numeric(mtcars$trn), resid(fit1))
plot(mtcars$trn, resid(fit1))
ylab="residuals of model 'fit1'"
plot(mtcars$trn, resid(fit1),
ylab="residuals of model 'fit1'"
xlab=""
main="")
main="Residuals of model 'fit1' by transmission type")
main="Residuals of model fit1 by transmission type")
xlab="transmission",
main="Residuals of model fit1 by transmission type")
main="Residuals of model fit1 by transmission type")
main="Residuals of model fit1 by transmission type")
plot(mtcars$trn, resid(fit1), ylab="residuals of model fit1", xlab="transmission", main="Residuals of model fit1 by transmission type")
main="Residuals of model fit1 by transmission type")
ylab="residuals of model fit1",
plot(mtcars$trn, resid(fit1),
ylab="residuals of model fit1",
xlab="transmission",
main="Residuals of model fit1 by transmission type")
ylab="residuals",
plot(mtcars$trn, resid(fit1),
ylab="residuals",
xlab="transmission",
main="Residuals of model fit1 by transmission type")
fit1 <- lm(mpg ~ trn, mtcars)
summary(fit1)$coef
fit2 <- lm(mpg ~ trn - 1, mtcars)
summary(fit2)$coef
mean(mtcars$mpg[am==1])
mean(mtcars$mpg[mtcars$am==1])
mean(mtcars$mpg[mtcars$am==0])
fit2 <- lm(mpg ~ trn, mtcars)
summary(fit2)
summary(fit2)$coef
plot(mtcars$trn, resid(fit2),
ylab="residuals",
xlab="transmission",
main="Figure 2: Residuals of model with intercept by transmission type")
plot(as.factor(mtcars$am), mtcars$mpg,
ylab="miles per gallon",
xlab="transmission (0 = auto, 1 = manual)",
main="Figure 1: MPG per transmission type")
library(MASS)
?shuttle
fit <- lm(use ~ wind, data = shuttle)
?fit
fit
fit[1]
fit$coef[1]
fit$coef[1] - 1
fit$coef[1] / (fit$coef[1] + fit$coef[2])
iif(shuttle$use=="auto",1,0)
if(shuttle$use=="auto",1,0)
sapply(shuttle, if(shuttle$use=="auto",1,0))
shuttle[auto]
shuttle$auto[use="auto"] <- 1
shuttle$auto[use="noauto"] <- 0
shuttle
shuttle$auto[use="noauto"] <- 0
shuttle$auto[use="noauto"]
shuttle$auto[use="noauto",]
shuttle$auto[use=="noauto"]
shuttle$auto[shuttle$use=="auto"] <- 1
shuttle$auto[shuttle$use=="noauto"] <- 0
shuttle
fit <- lm(auto ~ wind, data = shuttle, family = "binomial")
fit <- glm(auto ~ wind, data = shuttle, family = "binomial")
fit
fit[1]
fit$coef[1] / (fit$coef[1] + fit$coef[2])
fit$coef[1] / fit$coef[2]
fit$coef[2]
exp(fit$coef[2])
exp(fit$coef[1])
fit$coef[1]
fit$coef[2]
exp(fit$coef[1]) / exp(fit$coef[2])
fit$coef[2]
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]
fit
summary(fit)
fit <- glm(auto ~ wind * magn, data = shuttle, family = "binomial")
summary(fit)
fit$coef[2]
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]
summary(fit)
fit$coef[2]
shuttle$auto[shuttle$use=="auto"] <- 1
shuttle$auto[shuttle$use=="noauto"] <- 0
shuttle$wind2[shuttle$wind=="head"] <- 1
shuttle$wind2[shuttle$wind=="tail"] <- 0
fit <- glm(auto ~ wind2, data = shuttle, family = "binomial")
fit$coef[2]
fit <- glm(auto ~ wind2, data = shuttle, family = "binomial")
fit
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
fit <- glm(auto ~ wind2 + magn, data = shuttle, family = "binomial")
fit$coef[2]
fit$coef[2]
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
fit$coef[2]
fit$coef[1] / fit$coef[2]
exp(fit$coef[1]) / exp(fit$coef[2])
fit$coef[1]
exp(fit$coef[1]) / (1 - exp(fit$coef[1]))
swirl()
library(swirl)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeats(fir))
head(dfbeats(fit))
head(dfbeata(fit))
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum(resid(fit)^2) / nrow(fit)-1)
sqrt(deviance(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit) / sigma*sqrt(1-hatvalues(fit))
resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fit) / df.resid(fit))
sigma1 <- sqrt(deviance(fit) / df.residual(fit))
sigma1 <- sqrt(deviance(fitno) / df.residual(fitno))
resid(fit)[1] / (sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
deviation(dy) / (2*sigma^2)
sumsq(dy) / (2*sigma^2)
sum(dy^2) / (2*sigma^2)
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility, Agriculture + Education + Catholic + Infant.Mortality, swiss)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
(deviance(fit1)-deviance(fit3))/2
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family="binomial", data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, "poisson", hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted[704]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(simplystats ~ date, "poisson", hits, offset=log(visits+1))
qpois(.95, mdl2$fitted.values[704])
library(MASS)
?shuttle
shuttle$auto[shuttle$use=="auto"] <- 1
shuttle$auto[shuttle$use=="noauto"] <- 0
shuttle$wind2[shuttle$wind=="head"] <- 1
shuttle$wind2[shuttle$wind=="tail"] <- 0
fit <- glm(auto ~ wind2, data = shuttle, family = "binomial")
fit$coef[2]
fit <- glm(auto ~ wind, data = shuttle, family = "binomial")
fit$coef[2]
library(MASS)
shuttle$auto[shuttle$use=="auto"] <- 1
shuttle$auto[shuttle$use=="noauto"] <- 0
fit <- glm(auto ~ wind, data = shuttle, family = "binomial")
fit$coef[2]
shuttle
fit
summary(fit)
summary(fit)$coef[2]
summary(fit)
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
summary(fit)
summary(fit)$coef[1]
summary(fit)$coef[1] / summary(fit)$coef[2]
data(InsectSprays)
InsectSprays
head(InsectSprays)
fit <- glm(count ~ spray, "poisson", InsectSprays)
summary(fit)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- 0
splineTerms <- (x > knot) * (x - knot)
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y)
splineTerms
xMat
abline(lm(y ~ xMat - 1))
line(lm(y ~ xMat - 1))
plot(x, y)
lines(x, yhat)
lines(x, yhat, col='red', lwd=2)
plot(x, y, frame=FALSE, pch=21, bg='green', cex=2)
lines(x, yhat, col='red', lwd=2)
plot(x, y, frame=FALSE, pch=21, bg='gray', cex=2)
lines(x, yhat, col='red', lwd=2)
summary(lm(y ~ xMat - 1))
summary(lm(y ~ xMat - 1))$coef[3]
library(MASS)
?shuttle
shuttle$auto[shuttle$use=="auto"] <- 1
shuttle$auto[shuttle$use=="noauto"] <- 0
fit <- glm(auto ~ wind, data = shuttle, family = "binomial")
summary(fit)$coef[2]
summary(fit)
-1 * summary(fit)$coef[2]
fit <- glm(auto ~ wind + magn, data = shuttle, family = "binomial")
fit
data(InsectSprays)
fit <- glm(count ~ spray, "poisson", InsectSprays)
summary(fit)
?relevel
relevel(InsectSprays$spray, "sprayB")
relevel(InsectSprays$spray, 'B')
fit <- glm(count ~ spray, "poisson", InsectSprays)
summary(fit)
spray2 <- relevel(InsectSprays$spray, 'B')
fit <- glm(count ~ spray2, "poisson", InsectSprays)
summary(fit)
summary(lm(y ~ xMat - 1))$coef[3]
summary(lm(y ~ xMat - 1))
fit <- glm(auto ~ wind, data = shuttle, family = "binomial")
summary(fit)$coef[2] #xx
summary(fit)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
setwd("/Users/Derek/Desktop/Coursera/Practical Machine Learning/Assignment")
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
summary(training)
training[training=="" | training=="#DIV/0"]
training[training=="#DIV/0"]
training[training=="#DIV/0",]
training[training=="#DIV/0" & !is.na(training)]
training[training=="#DIV/0" & !is.na(training)]
training[!is.na(training)]
training[training=="#DIV/0"]
training[training=="#DIV/0" && !is.na(training)]
unique(training[training=="#DIV/0"])
training[training=="#DIV/0" | training==""] <- NA
plot(training$classe)
preProc <- preProcess(training[,!names(training) %in% c("X","classe")], "pca", 0.9)
library(caret)
preProc <- preProcess(training[,!names(training) %in% c("X","classe")], "pca", 0.9)
training[,!names(training) %in% c("X","classe")]
training[training="#DIV/0"]
training[training=="#DIV/0"]
training[training=="#DIV//0"]
training[training %in% c("#DIV/0","<NA>")]
training[training %in% c("#DIV/0","<NA>",NA)]
preProc <- preProcess(training[,!names(training) %in% c("X","classe")], "pca", 0.9)
names(training[,!names(training) %in% c("X","classe")])
(training[,!names(training) %in% c("X","classe")])[,"username"]
(training[,!names(training) %in% c("X","classe")])[,"user_name"]
preProc <- preProcess(training[,!names(training) %in% c("X","classe","user_name")], "pca", 0.9)
summary(training)
training[training=="#DIV/0!" | training==""] <- NA
summary(training[,!names(training) %in% c("X","classe")])
preProc <- preProcess(training[,!names(training) %in% c("X","classe","user_name","new_window")], "pca", 0.9)
columns(training)
column(training)
Column(training)
Columns(training)
names(training)
head(training)
preProc <- preProcess(training[,!names(training) %in% c("X","classe","user_name","new_window","cvtd_timestamp")], "pca", 0.9)
training[,!names(training) %in% c("X","classe","user_name","new_window","cvtd_timestamp")]
training[training=="#DIV/0!" | training=="" | training=="NA"] <- NA
preProc <- preProcess(training[,!names(training) %in% c("X","classe","user_name","new_window","cvtd_timestamp")], "pca", 0.9)
training[,!names(training) %in% c("X","classe","user_name","new_window","cvtd_timestamp")]
str(training)
